{"ast":null,"code":"var _jsxFileName = \"C:\\\\piramideEtariaBrasil\\\\src\\\\PopulationPyramidChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PopulationPyramidChart = ({\n  width = '100%',\n  height = '100%',\n  apiUrl,\n  year\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(apiUrl);\n        if (!response.ok) {\n          throw new Error('Erro ao obter data da API do IBGE');\n        }\n        const data = await response.json();\n        const dadosTratados = data[0].resultados;\n        const dadosParaGraficoHomens = [];\n        const dadosParaGraficoMulheres = [];\n        var codigoSexo = 0;\n        var codigoGrupoIdade = 0;\n        if (year === '2022') {\n          codigoSexo = 2;\n          codigoGrupoIdade = 287;\n        } else if (year === '2010') {\n          codigoSexo = 2;\n          codigoGrupoIdade = 58;\n        }\n        for (let i = 0; i < dadosTratados.length; i++) {\n          var sexoChave = '';\n          var sexo = '';\n          for (let j = 0; j < dadosTratados[i].classificacoes.length; j++) {\n            if (dadosTratados[i].classificacoes[j].id == codigoSexo) {\n              const sexoChaveValor = dadosTratados[i].classificacoes[j].categoria;\n              sexoChave = Object.keys(sexoChaveValor)[0];\n              sexo = sexoChaveValor[sexoChave];\n            }\n          }\n          var chaveGrupoIdade = '';\n          var valorGrupoIdade = '';\n          for (let j = 0; j < dadosTratados[i].classificacoes.length; j++) {\n            if (dadosTratados[i].classificacoes[j].id == codigoGrupoIdade) {\n              const grupoIdadeChaveValor = dadosTratados[i].classificacoes[j].categoria;\n              chaveGrupoIdade = Object.keys(grupoIdadeChaveValor)[0];\n              valorGrupoIdade = grupoIdadeChaveValor[chaveGrupoIdade];\n            }\n          }\n          const quantidadeChaveValor = dadosTratados[i].series[0].serie;\n          const chaveQuantidade = Object.keys(quantidadeChaveValor)[0];\n          var valorQuantidade = quantidadeChaveValor[chaveQuantidade];\n          valorQuantidade = parseInt(valorQuantidade, 10);\n          if (sexo === 'Homens') {\n            dadosParaGraficoHomens.push([valorGrupoIdade, -valorQuantidade]);\n          }\n          if (sexo === 'Mulheres') {\n            dadosParaGraficoMulheres.push([valorGrupoIdade, valorQuantidade]);\n          }\n        }\n        const homens = {\n          name: 'Male',\n          points: dadosParaGraficoHomens\n        };\n        const mulheres = {\n          name: 'Female',\n          points: dadosParaGraficoMulheres\n        };\n        if (window.JSC) {\n          renderChart(homens, mulheres);\n        } else {\n          const script = document.createElement('script');\n          script.src = 'https://code.jscharting.com/latest/jscharting.js';\n          script.async = true;\n          script.onload = () => renderChart(homens, mulheres);\n          document.head.appendChild(script);\n        }\n      } catch (error) {\n        console.error('Erro:', error);\n      }\n    };\n    fetchData();\n  }, [apiUrl]);\n  const renderChart = (homens, mulheres) => {\n    homens.points.reverse();\n    mulheres.points.reverse();\n    const config = {\n      debug: true,\n      type: 'horizontal column',\n      title_label_text: '',\n      yAxis: {\n        scale_type: 'stacked',\n        defaultTick_label_text: '{Math.abs(%Value):a2}'\n      },\n      xAxis: {\n        label_text: 'Age',\n        crosshair_enabled: true\n      },\n      defaultTooltip_label_text: 'Ages %xValue:<br><b>%points</b>',\n      defaultPoint_tooltip: '%icon {Math.abs(%Value)}',\n      legend_template: '%name %icon {Math.abs(%Value)}',\n      series: [homens, mulheres]\n    };\n    if (window.JSC && typeof window.JSC.Chart === 'function') {\n      // Verifica se chartRef.current não é nulo antes de chamar a função Chart\n      if (chartRef.current) {\n        window.JSC.Chart(chartRef.current, config);\n      } else {\n        console.error('chartRef.current é nulo.');\n      }\n    } else {\n      console.error('JSCharting.Chart não está definido ou não é uma função.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: chartRef,\n    style: {\n      width,\n      height\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 10\n  }, this);\n};\n_s(PopulationPyramidChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = PopulationPyramidChart;\nexport default PopulationPyramidChart;\nvar _c;\n$RefreshReg$(_c, \"PopulationPyramidChart\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","PopulationPyramidChart","width","height","apiUrl","year","_s","chartRef","fetchData","response","fetch","ok","Error","data","json","dadosTratados","resultados","dadosParaGraficoHomens","dadosParaGraficoMulheres","codigoSexo","codigoGrupoIdade","i","length","sexoChave","sexo","j","classificacoes","id","sexoChaveValor","categoria","Object","keys","chaveGrupoIdade","valorGrupoIdade","grupoIdadeChaveValor","quantidadeChaveValor","series","serie","chaveQuantidade","valorQuantidade","parseInt","push","homens","name","points","mulheres","window","JSC","renderChart","script","document","createElement","src","async","onload","head","appendChild","error","console","reverse","config","debug","type","title_label_text","yAxis","scale_type","defaultTick_label_text","xAxis","label_text","crosshair_enabled","defaultTooltip_label_text","defaultPoint_tooltip","legend_template","Chart","current","ref","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/piramideEtariaBrasil/src/PopulationPyramidChart.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    JSC?: {\r\n      Chart: (element: HTMLElement, config: any) => void;\r\n    };\r\n  }\r\n}\r\n\r\ninterface DataPoint {\r\n  name: string;\r\n  points: [string, number][];\r\n}\r\n\r\ninterface PopulationPyramidChartProps {\r\n  width?: string;\r\n  height?: string;\r\n  apiUrl: string;\r\n  year: string;\r\n}\r\n\r\nconst PopulationPyramidChart: React.FC<PopulationPyramidChartProps> = ({ width = '100%', height = '100%', apiUrl, year }) => {\r\n  const chartRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          apiUrl,\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Erro ao obter data da API do IBGE');\r\n        }\r\n\r\n        const data = await response.json();\r\n        const dadosTratados = data[0].resultados;\r\n\r\n        const dadosParaGraficoHomens: [string, number][] = [];\r\n        const dadosParaGraficoMulheres: [string, number][] = [];\r\n\r\n        var codigoSexo = 0;\r\n        var codigoGrupoIdade = 0;\r\n        if(year === '2022'){\r\n          codigoSexo = 2;\r\n          codigoGrupoIdade = 287;\r\n        }\r\n        else if(year === '2010'){\r\n          codigoSexo = 2;\r\n          codigoGrupoIdade = 58;\r\n        }\r\n\r\n        for (let i = 0; i < dadosTratados.length; i++) {\r\n\r\n          var sexoChave = '';\r\n          var sexo = '';\r\n          for (let j = 0; j < dadosTratados[i].classificacoes.length; j++) {\r\n            if(dadosTratados[i].classificacoes[j].id == codigoSexo){\r\n\r\n              const sexoChaveValor = dadosTratados[i].classificacoes[j].categoria;\r\n              sexoChave = Object.keys(sexoChaveValor)[0];\r\n              sexo = sexoChaveValor[sexoChave];\r\n\r\n            }\r\n          }\r\n\r\n          var chaveGrupoIdade = '';\r\n          var valorGrupoIdade = '';\r\n          for (let j = 0; j < dadosTratados[i].classificacoes.length; j++) {\r\n            if(dadosTratados[i].classificacoes[j].id == codigoGrupoIdade){\r\n\r\n              const grupoIdadeChaveValor = dadosTratados[i].classificacoes[j].categoria;\r\n              chaveGrupoIdade = Object.keys(grupoIdadeChaveValor)[0];\r\n              valorGrupoIdade = grupoIdadeChaveValor[chaveGrupoIdade];\r\n\r\n            }\r\n          }\r\n\r\n          const quantidadeChaveValor = dadosTratados[i].series[0].serie;\r\n          const chaveQuantidade = Object.keys(quantidadeChaveValor)[0];\r\n          var valorQuantidade = quantidadeChaveValor[chaveQuantidade];\r\n          valorQuantidade = parseInt(valorQuantidade, 10);\r\n\r\n          if (sexo === 'Homens') {\r\n            dadosParaGraficoHomens.push([valorGrupoIdade, -valorQuantidade]);\r\n          }\r\n          if (sexo === 'Mulheres') {\r\n            dadosParaGraficoMulheres.push([valorGrupoIdade, valorQuantidade]);\r\n          }\r\n        }\r\n\r\n        const homens: DataPoint = {\r\n          name: 'Male',\r\n          points: dadosParaGraficoHomens,\r\n        };\r\n\r\n        const mulheres: DataPoint = {\r\n          name: 'Female',\r\n          points: dadosParaGraficoMulheres,\r\n        };\r\n\r\n        if (window.JSC) {\r\n          renderChart(homens, mulheres);\r\n        } else {\r\n          const script = document.createElement('script');\r\n          script.src = 'https://code.jscharting.com/latest/jscharting.js';\r\n          script.async = true;\r\n          script.onload = () => renderChart(homens, mulheres);\r\n          document.head.appendChild(script);\r\n        }\r\n      } catch (error) {\r\n        console.error('Erro:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [apiUrl]);\r\n\r\n  const renderChart = (homens: DataPoint, mulheres: DataPoint) => {\r\n    homens.points.reverse();\r\n    mulheres.points.reverse();\r\n    const config = {\r\n      debug: true,\r\n      type: 'horizontal column',\r\n      title_label_text: '',\r\n      yAxis: {\r\n        scale_type: 'stacked',\r\n        defaultTick_label_text: '{Math.abs(%Value):a2}',\r\n      },\r\n      xAxis: { label_text: 'Age', crosshair_enabled: true },\r\n      defaultTooltip_label_text: 'Ages %xValue:<br><b>%points</b>',\r\n      defaultPoint_tooltip: '%icon {Math.abs(%Value)}',\r\n      legend_template: '%name %icon {Math.abs(%Value)}',\r\n      series: [homens, mulheres],\r\n    };\r\n\r\n    if (window.JSC && typeof window.JSC.Chart === 'function') {\r\n      // Verifica se chartRef.current não é nulo antes de chamar a função Chart\r\n      if (chartRef.current) {\r\n        window.JSC.Chart(chartRef.current, config);\r\n      } else {\r\n        console.error('chartRef.current é nulo.');\r\n      }\r\n    } else {\r\n      console.error('JSCharting.Chart não está definido ou não é uma função.');\r\n    }\r\n  };\r\n\r\n  return <div ref={chartRef} style={{ width, height }}></div>;\r\n};\r\n\r\nexport default PopulationPyramidChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}