{"ast":null,"code":"var _jsxFileName = \"C:\\\\piramideEtariaBrasil\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PopulationPyramidChart from './PopulationPyramidChart';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _apiUrls$find$url, _apiUrls$find;\n  const [selectedYear, setSelectedYear] = useState('2022');\n  const [apiUrls, setApiUrls] = useState([]);\n  const [dataFetched, setDataFetched] = useState(false); // Flag para indicar se os dados foram buscados\n\n  useEffect(() => {\n    if (!dataFetched) {\n      // Verifica se os dados já foram buscados\n      const fetchData = async () => {\n        try {\n          const response = await axios.get('http://localhost:3333/censo');\n          setApiUrls(response.data.map(censo => ({\n            year: censo.year,\n            url: censo.url\n          })));\n          setDataFetched(true); // Atualiza a flag após buscar os dados\n        } catch (error) {\n          console.error('Erro ao buscar os dados do censo:', error);\n        }\n      };\n      fetchData();\n    }\n  }, [dataFetched]); // Adiciona dataFetched como uma dependência\n\n  const handleYearChange = event => {\n    setSelectedYear(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"mb-4\",\n          children: \"Brazilian Age Pyramid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"yearSelect\",\n            className: \"form-label\",\n            children: \"Select Year:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"yearSelect\",\n            className: \"form-select\",\n            value: selectedYear,\n            onChange: handleYearChange,\n            children: apiUrls.map(obj => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: obj.year,\n              children: obj.year\n            }, obj.year, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), apiUrls.length > 0 && /*#__PURE__*/_jsxDEV(PopulationPyramidChart, {\n          width: \"800px\",\n          height: \"600px\",\n          apiUrl: (_apiUrls$find$url = (_apiUrls$find = apiUrls.find(obj => obj.year === selectedYear)) === null || _apiUrls$find === void 0 ? void 0 : _apiUrls$find.url) !== null && _apiUrls$find$url !== void 0 ? _apiUrls$find$url : '',\n          year: selectedYear\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iNoZT4vwwQK9CDF/qoobAfn+ppk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PopulationPyramidChart","axios","jsxDEV","_jsxDEV","App","_s","_apiUrls$find$url","_apiUrls$find","selectedYear","setSelectedYear","apiUrls","setApiUrls","dataFetched","setDataFetched","fetchData","response","get","data","map","censo","year","url","error","console","handleYearChange","event","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","obj","length","width","height","apiUrl","find","_c","$RefreshReg$"],"sources":["C:/piramideEtariaBrasil/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PopulationPyramidChart from './PopulationPyramidChart';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const [selectedYear, setSelectedYear] = useState('2022');\r\n  const [apiUrls, setApiUrls] = useState<{ year: string; url: string; }[]>([]);\r\n  const [dataFetched, setDataFetched] = useState(false); // Flag para indicar se os dados foram buscados\r\n\r\n  useEffect(() => {\r\n    if (!dataFetched) { // Verifica se os dados já foram buscados\r\n      const fetchData = async () => {\r\n        try {\r\n          const response = await axios.get('http://localhost:3333/censo');\r\n          setApiUrls(response.data.map((censo: { year: string; url: string; }) => ({\r\n            year: censo.year,\r\n            url: censo.url\r\n          })));\r\n          setDataFetched(true); // Atualiza a flag após buscar os dados\r\n        } catch (error) {\r\n          console.error('Erro ao buscar os dados do censo:', error);\r\n        }\r\n      };\r\n\r\n      fetchData();\r\n    }\r\n  }, [dataFetched]); // Adiciona dataFetched como uma dependência\r\n\r\n  const handleYearChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setSelectedYear(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-6\">\r\n          <h1 className=\"mb-4\">Brazilian Age Pyramid</h1>\r\n\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"yearSelect\" className=\"form-label\">Select Year:</label>\r\n            <select id=\"yearSelect\" className=\"form-select\" value={selectedYear} onChange={handleYearChange}>\r\n              {apiUrls.map((obj) => (\r\n                <option key={obj.year} value={obj.year}>\r\n                  {obj.year}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          {apiUrls.length > 0 && (\r\n            <PopulationPyramidChart\r\n              width=\"800px\"\r\n              height=\"600px\"\r\n              apiUrl={apiUrls.find(obj => obj.year === selectedYear)?.url ?? ''}\r\n              year={selectedYear}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,sBAAsB,MAAM,0BAA0B;AAC7D,OAAO,sCAAsC;AAC7C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,iBAAA,EAAAC,aAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,MAAM,CAAC;EACxD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAmC,EAAE,CAAC;EAC5E,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEvDC,SAAS,CAAC,MAAM;IACd,IAAI,CAACa,WAAW,EAAE;MAAE;MAClB,MAAME,SAAS,GAAG,MAAAA,CAAA,KAAY;QAC5B,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,6BAA6B,CAAC;UAC/DL,UAAU,CAACI,QAAQ,CAACE,IAAI,CAACC,GAAG,CAAEC,KAAqC,KAAM;YACvEC,IAAI,EAAED,KAAK,CAACC,IAAI;YAChBC,GAAG,EAAEF,KAAK,CAACE;UACb,CAAC,CAAC,CAAC,CAAC;UACJR,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,OAAOS,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;QAC3D;MACF,CAAC;MAEDR,SAAS,CAAC,CAAC;IACb;EACF,CAAC,EAAE,CAACF,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEnB,MAAMY,gBAAgB,GAAIC,KAA2C,IAAK;IACxEhB,eAAe,CAACgB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,oBACExB,OAAA;IAAKyB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7B1B,OAAA;MAAKyB,SAAS,EAAC,4BAA4B;MAAAC,QAAA,eACzC1B,OAAA;QAAKyB,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACvB1B,OAAA;UAAIyB,SAAS,EAAC,MAAM;UAAAC,QAAA,EAAC;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAE/C9B,OAAA;UAAKyB,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnB1B,OAAA;YAAO+B,OAAO,EAAC,YAAY;YAACN,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACvE9B,OAAA;YAAQgC,EAAE,EAAC,YAAY;YAACP,SAAS,EAAC,aAAa;YAACD,KAAK,EAAEnB,YAAa;YAAC4B,QAAQ,EAAEZ,gBAAiB;YAAAK,QAAA,EAC7FnB,OAAO,CAACQ,GAAG,CAAEmB,GAAG,iBACflC,OAAA;cAAuBwB,KAAK,EAAEU,GAAG,CAACjB,IAAK;cAAAS,QAAA,EACpCQ,GAAG,CAACjB;YAAI,GADEiB,GAAG,CAACjB,IAAI;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEb,CACT;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,EAELvB,OAAO,CAAC4B,MAAM,GAAG,CAAC,iBACjBnC,OAAA,CAACH,sBAAsB;UACrBuC,KAAK,EAAC,OAAO;UACbC,MAAM,EAAC,OAAO;UACdC,MAAM,GAAAnC,iBAAA,IAAAC,aAAA,GAAEG,OAAO,CAACgC,IAAI,CAACL,GAAG,IAAIA,GAAG,CAACjB,IAAI,KAAKZ,YAAY,CAAC,cAAAD,aAAA,uBAA9CA,aAAA,CAAgDc,GAAG,cAAAf,iBAAA,cAAAA,iBAAA,GAAI,EAAG;UAClEc,IAAI,EAAEZ;QAAa;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CACF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC5B,EAAA,CAzDQD,GAAG;AAAAuC,EAAA,GAAHvC,GAAG;AA2DZ,eAAeA,GAAG;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}